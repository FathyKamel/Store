
package com.store.presentation;

import com.store.database.exception.PersistanceOperationException;
import com.store.models.basic.BasicStoreEntity;
import com.store.models.impl.Customer;
import com.store.service.basic.BasicServiceManager;
import com.store.service.impl.CustomerService;
import com.store.ws.service.exception.OperationFailureException;

import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import java.awt.ComponentOrientation;
import java.awt.Window;
import java.util.List;
import java.util.Vector;

import javax.swing.JScrollPane;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;


public class AddCustomer extends javax.swing.JFrame {
    
	 private BasicServiceManager basicServiceManager;
	   private Customer  customer ;
	   private DefaultTableModel tableModel ;
	  SalesInvoice salesInvoicePresentation ;
	   
	   private List<BasicStoreEntity>  allCustomers ;
	   String customerID ;
	   String customerName;
	   
	   JScrollPane scrollPane;
	  
    public AddCustomer() throws PersistanceOperationException {
    	
    	initComponents();
    	
    	
    	
    	SelectCustomerMode();
//    	    AllCustomersTable.addAncestorListener(this);
    	    AllCustomersTable.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    	    
    	    setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    	    
    	     
    	    
    	 
		
		 
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws PersistanceOperationException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws PersistanceOperationException {

        jPanel1 = new javax.swing.JPanel();
        phone = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        notes = new javax.swing.JLabel();
        cutomerName = new javax.swing.JTextField();
        customerPhone = new javax.swing.JTextField();
        customerAddress = new javax.swing.JTextField();
        Nots = new javax.swing.JTextField();
        saveCutomer = new javax.swing.JButton();
        AddCustomer = new javax.swing.JButton();
        AddCustomer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		
        		AddCustomerMode();
        		
        		
        	}
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setName("ahmed"); // NOI18N

        phone.setText("الهاتف");

        address.setText("العنوان");

        customerNameLabel.setText("اسم العميل");

        notes.setText("ملاحظات");

        cutomerName.setName("cutomer Name"); // NOI18N

        saveCutomer.setText("حفظ");
        saveCutomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCutomerActionPerformed(evt);
            }
        });

        AddCustomer.setText("إضافة عميل");
        String col[] = {"كود العميل ","اسم العميل ","العنوان", "التليفون", "ملاحظات"};

	     tableModel = new DefaultTableModel(col, 0);
	
	    
	
	     basicServiceManager = new CustomerService();
	    	
	allCustomers = ((CustomerService) basicServiceManager).allCustomers();
	for (int i =0 ; i< allCustomers.size(); i++ ){
		Customer cust = (Customer) allCustomers.get(i);
		Object [] obj = {cust.getId(),cust.getCustomerName(),cust.getCustomerAddress(),cust.getCustomerPhone(),cust.getNotes()};

		tableModel.addRow( obj);
	}
        
         scrollPane = new JScrollPane();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(AddCustomer, Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(saveCutomer)
        					.addGap(44)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
        						.addComponent(customerAddress, Alignment.LEADING)
        						.addComponent(Nots, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
        						.addComponent(customerPhone, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE)
        						.addComponent(cutomerName, GroupLayout.PREFERRED_SIZE, 211, GroupLayout.PREFERRED_SIZE)
        						.addComponent(scrollPane))))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(notes)
        				.addComponent(address)
        				.addComponent(customerNameLabel)
        				.addComponent(phone))
        			.addGap(23))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGap(63)
        			.addComponent(AddCustomer)
        			.addGap(16)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cutomerName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(customerNameLabel))
        			.addGap(21)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(customerPhone, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(phone))
        			.addGap(18)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(address)
        				.addComponent(customerAddress, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(notes)
        				.addComponent(Nots, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE))
        			.addGap(19)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(saveCutomer)
        					.addGap(44))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
        					.addContainerGap())))
        );
        
        AllCustomersTable = new JTable();
        AllCustomersTable.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent arg0) {
        		
        		int row = AllCustomersTable.getSelectedRow();
        		System.out.println("value  "+AllCustomersTable.getModel().getValueAt(row, 0).toString());
        		SalesInvoice.getCustomerNumber().setText( AllCustomersTable.getModel().getValueAt(row, 0).toString());
        		SalesInvoice.getCustomerName().setText(AllCustomersTable.getModel().getValueAt(row, 1).toString());
//        		customerID = "123";
//        		customerName = "456";
        		//SalesInvoice.putCustomerInfo(customerID , customerName);
        		
        		//frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
        		dispose();
        		
        	}
        });
        scrollPane.setViewportView(AllCustomersTable);
        AllCustomersTable.setModel( tableModel);
        jPanel1.setLayout(jPanel1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveCutomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCutomerActionPerformed
        
    	//basicServiceManager = new CustomerService();
    	customer = new Customer();
    	customer.setCustomerName(cutomerName.getText());
        customer.setCustomerAddress(customerAddress.getText());
        customer.setCustomerPhone(customerPhone.getText());
        customer.setNotes(Nots.getText());
        
    	
    	
    	try {
			basicServiceManager.insertNewItem(customer);
			cutomerName.setText(""); 
			customerAddress.setText("");
			customerPhone.setText("");
			Nots.setText("");
			tableModel.setRowCount(0);
			
			Object [] obj = {customer.getId(),customer.getCustomerName(),customer.getCustomerAddress(),customer.getCustomerPhone(),customer.getNotes()};

			tableModel.addRow( obj);
			
			
			SelectCustomerMode();
	    	    
	    	    scrollPane.setVisible(true);
			
		} catch (OperationFailureException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	
    }
    
    
    public void SelectCustomerMode(){

		customerAddress.setVisible(false);
    	  customerPhone.setVisible(false);
    	  cutomerName.setVisible(false);
    	  Nots.setVisible(false);
    	  
    	  phone.setVisible(false);
    	    address.setVisible(false);
    	    customerNameLabel.setVisible(false);
    	    notes.setVisible(false);
    }
    
    public void AddCustomerMode(){

    	customerAddress.setVisible(true);
    	  customerPhone.setVisible(true);
    	  cutomerName.setVisible(true);
    	  Nots.setVisible(true);
    	  
    	  phone.setVisible(true);
    	    address.setVisible(true);
    	    customerNameLabel.setVisible(true);
    	    notes.setVisible(true);
//    	    AllCustomersTable.addAncestorListener(this);
    	  scrollPane.setVisible(false);
    }
    
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new AddCustomer().setVisible(true);
				} catch (PersistanceOperationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
    }
    
    
    
    

    public String getCustomerID() {
		return customerID;
	}

//	public void setCustomerID(String customerID) {
//		this.customerID = customerID;
//	}

	public String getCustomerName() {
		return customerName;
	}

//	public void setCustomerName(String customerName) {
//		this.customerName = customerName;
//	}



	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Nots;
    private javax.swing.JTextField customerAddress;
    private javax.swing.JTextField customerPhone;
    private javax.swing.JTextField cutomerName;
    private javax.swing.JButton AddCustomer;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel address;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JLabel notes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveCutomer;
    private JTable AllCustomersTable;

//	@Override
//	public void actionPerformed(ActionEvent e) {
//		// TODO Auto-generated method stub
//		
//	}
}
